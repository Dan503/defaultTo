include ./clone

-
	//- a function for easily applying default values, especially good for objects
	function defaultTo(variable, defaultVal){

		//console.log(variable, defaultVal.constructor !== Array);

		//if it's an object, treat each setting in the object seperately
		if (typeof defaultVal === 'object' && defaultVal.constructor !== Array){
			var finalParams = clone(defaultVal);

			// We iterate over each property of the paramObject
			for (var key in variable) {

				// If the current property wasn't inherited, proceed
				if (variable.hasOwnProperty(key)) {
					// If the current property is defined, add it to finalParams
					if (variable[key] !== 'undefined') {
						finalParams[key] = variable[key];
					}
				}

				//if the value is an object, run the defaultTo function on the object
				if (typeof defaultVal[key] === 'object' && defaultVal[key].constructor !== Array){
					for (var subKey in defaultVal[key]) {
						finalParams[key][subKey] = defaultTo(variable[key][subKey], defaultVal[key][subKey]);
					}
				}
			}

			return finalParams;

		} else {
			//in all other cases completely relace the default value of the variable if a value is given
			return typeof variable === 'undefined' ?  defaultVal : variable;
		}
	}

